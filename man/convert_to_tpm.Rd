% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/handle_scaling.R
\name{convert_to_tpm}
\alias{convert_to_tpm}
\title{Convert protein abundance data to TPM-like normalization}
\usage{
convert_to_tpm(data)
}
\arguments{
\item{data}{A numeric matrix containing protein abundance data with identifiers as row names
and samples as columns. Values should be in linear scale, not log-transformed.}
}
\value{
A numeric matrix with the same dimensions as the input, with values normalized
to a TPM-like scale (sum of each column equals 1 million).
}
\description{
Normalizes protein abundance data using a TPM-like approach (Transcripts Per Million),
adapting this RNA-seq normalization method for use with proteomics data.
}
\details{
This function applies a TPM-like normalization to proteomics data, where each protein
abundance value is scaled by the total abundance in the sample and multiplied by 1 million.

If your input data is log-transformed, use \code{\link{unlog2_data}} first to convert it to
linear scale before applying this normalization.
}
\examples{
# Create example protein abundance data matrix
prot_mat <- matrix(abs(rnorm(12, mean = 500, sd = 200)), nrow = 4, ncol = 3)
rownames(prot_mat) <- paste0("Protein", 1:4)
colnames(prot_mat) <- paste0("Sample", 1:3)

# View original values and column sums
print(prot_mat)
print(colSums(prot_mat))

# Convert to TPM-like normalization
tpm_mat <- convert_to_tpm(prot_mat)

# Verify that column sums equal 1 million
print(tpm_mat)
print(colSums(tpm_mat))

}
